
home:https://easywechat.org/zh-cn/docs/server.html

1,安装
	使用 composer:$ composer require overtrue/wechat:~3.1 -vvv
2,服务
	2.1，初始化应用
		#include __DIR__ . '/vendor/autoload.php'; // 引入 composer 入口文件
		use EasyWeChat\Foundation\Application;
		$options = [
			'debug'  => true,
			'app_id' => 'your-app-id',
			'secret' => 'you-secret',
			'token'  => 'easywechat',
		];
		$app = new Application($options);
	2.2，服务
		$server 		= $app->server;		//
		$staff  		= $app->staff; 		// 客服
		$broadcast 		= $app->broadcast; 	//群发消息
		$notice 		= $app->notice; 	//模板消息
		$user   		= $app->user;
		$group 			= $app->user_group;
		$tag 			= $app->user_tag;	//用户标签
		$oauth  		= $app->oauth;
		$material 		= $app->material;	//永久素材
		$temporary 		= $app->material_temporary; //临时素材
		$menu 			= $app->menu;
		$accessToken 	= $app->access_token;
		$qrcode 		= $app->qrcode;		//二维码
		$js 			= $app->js;
		#所有的 API 返回值均为 EasyWeChat\Support\Collection
	2.3,response	
		$response = $server->serve(); // 执行服务端业务，返回值是一个 Symfony\Component\HttpFoundation\Response 实例。
		$response->send(); // Laravel 里请使用：return $response;
	2.4,微信服务端认证
		return $server->serve()->send(); // Laravel 里请使用：return $response;
3,config
	3.1,options
		return [
			'debug'  => true,//值：true/false,当值为 false 时，所有的日志都不会记录
			// 账号基本信息，请从微信公众平台/开放平台获取
			'app_id'  => 'your-app-id',         // AppID
			'secret'  => 'your-app-secret',     // AppSecret
			'token'   => 'your-token',          // Token
			'aes_key' => '',                    // EncodingAESKey，安全模式下请一定要填写！！！
			// 日志配置
			'log' => [
				'level'      => 'debug',//日志级别, 可选为：debug/info/notice/warning/error/critical/alert/emergency
				'permission' => 0777,//日志文件权限(可选)，默认为null（若为null值,monolog会取0644）
				'file'       => storage_path('/tmp/easywechat_'.date('Ymd').'.log'),//日志文件位置(绝对路径)，要求可写权限
			],
			// OAuth 配置
			'oauth' => [
				'scopes'   => ['snsapi_userinfo'],//公众平台（snsapi_userinfo / snsapi_base），开放平台：snsapi_login
				'callback' => '/examples/oauth_callback.php',//OAuth授权完成后的回调页地址
			],
			// 微信支付
			'payment' => [
				'merchant_id'        => 'your-mch-id',
				'key'                => 'key-for-signature',
				'cert_path'          => 'path/to/your/cert.pem', // XXX: 绝对路径！！！！
				'key_path'           => 'path/to/your/key',      // XXX: 绝对路径！！！！
				// 'device_info'     => '013467007045764',
				// 'sub_app_id'      => '',
				// 'sub_merchant_id' => '',
				// ...
			],
			//Guzzle 全局设置 ,更多请参考： http://docs.guzzlephp.org/en/latest/request-options.html
			'guzzle' => [
				'timeout' => 3.0, // 超时时间（秒）
				//'verify' => false, // 关掉 SSL 认证（强烈不建议！！！）
			],
		];
	3.2,修改
		$app = new Application($options);
		$app['config']->set('oauth.callback','wechat/oauthcallback/'. $sub_merchant_id->id);
4,消息
	4.1,消息 
		4.1.1,使用
			$message = $server->getMessage();//$message 是一个数组类型的数据，使用的时候这样使用：$message['ToUserName']
		4.1.2,属性
			//通用
			$message->ToUserName    //接收方帐号（该公众号 ID）
			$message->FromUserName  //发送方帐号（OpenID, 代表用户的唯一标识）
			$message->CreateTime    //消息创建时间（时间戳）
			$message->MsgId         //消息 ID（64位整型）
			$message->MsgType 		//消息类型：event,text,image,voice,video,location,link...
			// text 文本
			$message->Content  文本消息内容
			// image
			$message->PicUrl   图片链接
			// voice
			$message->MediaId        语音消息媒体id，可以调用多媒体文件下载接口拉取数据。
			$message->Format         语音格式，如 amr，speex 等
			$message->Recognition 	 * 开通语音识别后才有
			// video
			$message->MediaId       视频消息媒体id，可以调用多媒体文件下载接口拉取数据。
			$message->ThumbMediaId  视频消息缩略图的媒体id，可以调用多媒体文件下载接口拉取数据。
			// shortvideo
			$message->MediaId     视频消息媒体id，可以调用多媒体文件下载接口拉取数据。
			$message->ThumbMediaId    视频消息缩略图的媒体id，可以调用多媒体文件下载接口拉取数据。
			// event
			$message->Event       事件类型 （如：subscribe(订阅)、unsubscribe(取消订阅) ...， CLICK 等）
			// event 扫描带参数二维码事件
			$message->EventKey    事件KEY值，比如：qrscene_123123，qrscene_为前缀，后面为二维码的参数值
			$message->Ticket      二维码的 ticket，可用来换取二维码图片
			// event 上报地理位置事件
			$message->Latitude    23.137466   地理位置纬度
			$message->Longitude   113.352425  地理位置经度
			$message->Precision   119.385040  地理位置精度
			// event 自定义菜单事件
			$message->EventKey    事件KEY值，与自定义菜单接口中KEY值对应，如：CUSTOM_KEY_001, www.qq.com
			// location
			$message->Location_X  地理位置纬度
			$message->Location_Y  地理位置经度
			$message->Scale       地图缩放大小
			$message->Label       地理位置信息
			// link
			$message->Title        消息标题
			$message->Description  消息描述
			$message->Url          消息链接
	4.2,回复
		消息类都在： EasyWeChat\Message\
		原生消息：EasyWeChat\Message\Raw
	4.3,消息处理
		$server->setMessageHandler(function ($message) {
			return new Image(['media_id' => '........']);
			//return [$news1, $news2];//多图文消息
		});
	4.4,客服消息
		$app->staff->message([$news1, $news2, $news3, $news4])->to($openId)->send();
		return new \EasyWeChat\Message\Transfer();//转发
	4.5,群发
		$app->broadcast->send($messageType,$message,$targetId|[$openId1, $openId2]);
		$app->broadcast->preview($messageType, $message, $openId);
		$app->broadcast->previewByName($messageType, $message, $wxname);
		$app->broadcast->delete($msgId);
		$app->broadcast->status($msgId);
		$app->broadcast->sendText("大家好！欢迎使用 EasyWeChat。",$targetId);
	4.6,模板消息
		$notice = $app->notice;
			boolean 	setIndustry($industryId1, $industryId2) 修改账号所属行业；
			array 		getIndustry() 							返回所有支持的行业列表，用于做下拉选择行业可视化更新；
			string 		addTemplate($shortId) 					添加模板并获取模板ID；
			collection 	send($message) 							发送模板消息, 返回消息ID；
			array 		getPrivateTemplates() 					获取所有模板列表；
			array 		deletePrivateTemplate($templateId) 		删除指定ID的模板。
		$messageId = $notice->to($userOpenId)->uses($templateId)->andUrl($url)->data($data)->send();
5,user
	5.1,base
		$userService = $app->user; // 用户API
		$user = $userService->get($openId);
				$userService->batchGet([$openId1, $openId2, ...]);
				$userService->lists($nextOpenId = null); 		//用户列表
				$userService->remark($openId, $remark);  		//修改用户备注
				$userService->group($openId);					//用户所属用户组ID
				$userService->blacklist($beginOpenId = null);	//公众号的黑名单列表
				$userService->batchBlock(array $openidList); 	//拉黑用户
				$userService->batchUnblock(array $openidList); 	//取消拉黑用户
		// $user 便是一个 EasyWeChat\Support\Collection 实例
		$user['nickname'];
		$user->nickname;
		$user->get('nickname');
	5.2,user_tag
		$tag = $app->user_tag;			// $user['user_tag']
		$tag->lists();					// 获取所有标签
		$tag->create($name);			// 
		$tag->update($tagId, $name);	// 修改标签信息
		$tag->delete($tagId);			// 删除标签
		$tag->userTags($openId);		// openid 用户身上的标签
		$tag->usersOfTag($tagId, $nextOpenId = '');	//获取标签下粉丝列表
		$tag->batchTagUsers([$openId1, $openId2], $tagId);
		$tag->batchUntagUsers([$openId1, $openId2], $tagId);
	5.3,user_group
		$group = $app->user_group; 		// $user['user_group']
		$group->lists();				// 获取所有分组
		$group->create($name);			// 创建分组
		$group->update($groupId, $name);// 修改分组信息
		$group->delete($groupId);		// 删除分组
		$group->moveUser($openId, $groupId); 			// 移动单个用户到指定分组
		$group->moveUsers(array $openIds, $groupId);	// 批量移动用户到指定分组
6,OAuth2.0
	6.1,base
		#微信OAuth有两种：
			1)公众平台网页授权获取用户信息
				授权 URL: https://open.weixin.qq.com/connect/oauth2/authorize
				Scopes: snsapi_base 与 snsapi_userinfo
			2)开放平台网页登录
				授权 URL: https://open.weixin.qq.com/connect/qrconnect
				Scopes: snsapi_login
		#逻辑组成
			1)业务页面，也就是需要授权才能访问的页面。
			2)发起授权页，此页面其实可以省略，可以做成一个中间件，全局检查未登录就发起授权。
			3)授权回调页，接收用户授权后的状态，并获取用户信息，写入用户会话状态（SESSION）。
		$oauth = $app->oauth;			//
		$response 	= $oauth->scopes(['snsapi_userinfo'])>setRequest($request)->redirect();
		$user 		= $oauth->setRequest($request)->user();
		// $user->getId();  		// 对应微信的 OPENID
		// $user->id 				// openid.
		// $user->getNickname(); 	// 对应微信的 nickname
		// $user->getName(); 		// 对应微信的 nickname
		// $user->getAvatar(); 		// 头像网址
		// $user->getOriginal(); 	// 原始API返回的结果
		// $user->getToken(); 		// access_token， 比如用于地址共享时使用
7,素材
	7.1,base
		$material 	= $app->material;// 永久素材
		$temporary 	= $app->material_temporary;// 临时素材
	7.2,永久素材
		$result = $material->uploadImage("/path/to/your/image.jpg"); // 上传图片
		$result = $material->uploadVoice("/path/to/your/voice.mp3"); // 上传声音
		$result = $material->uploadVideo("/path/to/your/video.mp4", "视频标题", "视频描述");	// 上传视频
		$result = $material->uploadThumb("/path/to/your/thumb.jpg"); // 上传缩略图,用于视频封面或者音乐封面。
		$result = $material->uploadArticle([new Article([]),new Article([])]);	//
		$result = $material->updateArticle($mediaId, new Article(...), 1);	// 修改永久图文消息
		$result = $material->uploadArticleImage($path);					//上传永久文章内容图片
			$url = $result->url;
			$mediaId = $result->media_id;
		$resource = $material->get($mediaId);//获取永久素材
		$material->lists($type, $offset, $count);//获取永久素材列表,$type 素材的类型，图片（image）、视频（video）、语音 （voice）、图文（news）
		$stats = $material->stats(); //获取素材计数
		$material->delete($mediaId); //删除永久素材
	7.3,临时素材
		$temporary->uploadImage($path);//上传图片
		$temporary->uploadVoice($path);//上传声音
		$temporary->uploadVideo($path, $title, $description);//上传视频
		$temporary->uploadThumb($path);//上传缩略图
		$temporary->getStream($mediaId); //获取临时素材内容
		$temporary->download($mediaId, "/tmp/", "abc.jpg");//下载临时素材到本地
8,自定义菜单
	8.1,base
		$menu 	= $app->menu;
		$menus = $menu->all();// 查询菜单
		$menus = $menu->current();// 获取自定义菜单
		$menu->add(array $buttons[,array $matchRule]);//添加菜单
		$menu->destroy([$menuId]); // 删除菜单
		$menus = $menu->test($userId);//测试个性化菜单
9,JSSDK
	$js = $app->js;
	$js->config(array $APIs, $debug = false, $beta = false, $json = true);
	$js->setUrl($url) 设置当前URL
		
*,二维码
	9.1,base
		#临时二维码，是有过期时间的，最长可以设置为在二维码生成后的30天后过期，但能够生成较多数量。
		#永久二维码，是无过期时间的，但数量较少（目前为最多10万个）。
		$qrcode = $app->qrcode;
		Bag temporary($sceneId, $expireSeconds = null) 	//创建临时二维码；
		Bag forever($sceneValue) 						//创建永久二维码
		Bag card(array $card) 							//创建卡券二维码
		string url($ticket) 							//获取二维码网址，用法： <img src="<?php $qrcode->url($qrTicket); ?>">；

*,access token
	#与 OAuth 中的 code 换取的 Access Token 区别开
	$accessToken = $app->access_token; // EasyWeChat\Core\AccessToken 实例
	$token = $accessToken->getToken(); // token 字符串
	$token = $accessToken->getToken(true); // 强制重新从微信服务器获取 token.
	$app['access_token']->setToken($newAccessToken, $expires);//修改 $app 的 Access Token
	$app->access_token->setCache(Doctrine\Common\Cache\Cache $cache);//设置 AccessToken 的缓存
	